/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * LicencedUserId generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Embeddable
public class LicencedUserId  implements java.io.Serializable {


     private Long userId;
     private Long codeSystemVersionId;

    public LicencedUserId() {
    }

    public LicencedUserId(Long userId, Long codeSystemVersionId) {
       this.userId = userId;
       this.codeSystemVersionId = codeSystemVersionId;
    }
   

    @Column(name="userId", nullable=false)
    public Long getUserId() {
        return this.userId;
    }
    
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Column(name="codeSystemVersionId", nullable=false)
    public Long getCodeSystemVersionId() {
        return this.codeSystemVersionId;
    }
    
    public void setCodeSystemVersionId(Long codeSystemVersionId) {
        this.codeSystemVersionId = codeSystemVersionId;
    }


     @Override
   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof LicencedUserId) ) return false;
		 LicencedUserId castOther = ( LicencedUserId ) other; 
         
		 return (this.getUserId()==castOther.getUserId())
 && (this.getCodeSystemVersionId()==castOther.getCodeSystemVersionId());
   }
   
     @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + (int) ((long)this.getUserId());
         result = 37 * result + (int) ((long)this.getCodeSystemVersionId());
         return result;
   }   


}


