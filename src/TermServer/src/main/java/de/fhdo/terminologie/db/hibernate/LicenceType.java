/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * LicenceType generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Entity
@Table(name="licence_type"
    
)
public class LicenceType  implements java.io.Serializable {


     private Long id;
     private CodeSystemVersion codeSystemVersion;
     private String typeTxt;
     private Set<LicencedUser> licencedUsers = new HashSet<LicencedUser>(0);

    public LicenceType() {
    }

    public LicenceType(CodeSystemVersion codeSystemVersion, String typeTxt, Set<LicencedUser> licencedUsers) {
       this.codeSystemVersion = codeSystemVersion;
       this.typeTxt = typeTxt;
       this.licencedUsers = licencedUsers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemVersionId")
    public CodeSystemVersion getCodeSystemVersion() {
        return this.codeSystemVersion;
    }
    
    public void setCodeSystemVersion(CodeSystemVersion codeSystemVersion) {
        this.codeSystemVersion = codeSystemVersion;
    }
    
    @Column(name="typeTxt", length=65535)
    public String getTypeTxt() {
        return this.typeTxt;
    }
    
    public void setTypeTxt(String typeTxt) {
        this.typeTxt = typeTxt;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="licenceType")
    public Set<LicencedUser> getLicencedUsers() {
        return this.licencedUsers;
    }
    
    public void setLicencedUsers(Set<LicencedUser> licencedUsers) {
        this.licencedUsers = licencedUsers;
    }




}


