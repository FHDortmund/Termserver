/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ConceptValueSetMembership generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Entity
@Table(name="concept_value_set_membership"
    
)
public class ConceptValueSetMembership  implements java.io.Serializable {


     private ConceptValueSetMembershipId id;
     private CodeSystemEntityVersion codeSystemEntityVersion;
     private ValueSetVersion valueSetVersion;
     private String valueOverride;
     private Integer status;
     private Date statusDate;
     private Boolean isStructureEntry;
     private Long orderNr;
     private String description;
     private String meaning;
     private String hints;

    public ConceptValueSetMembership() {
    }

	
    public ConceptValueSetMembership(ConceptValueSetMembershipId id, CodeSystemEntityVersion codeSystemEntityVersion, ValueSetVersion valueSetVersion) {
        this.id = id;
        this.codeSystemEntityVersion = codeSystemEntityVersion;
        this.valueSetVersion = valueSetVersion;
    }
    public ConceptValueSetMembership(ConceptValueSetMembershipId id, CodeSystemEntityVersion codeSystemEntityVersion, ValueSetVersion valueSetVersion, String valueOverride, Integer status, Date statusDate, Boolean isStructureEntry, Long orderNr) {
       this.id = id;
       this.codeSystemEntityVersion = codeSystemEntityVersion;
       this.valueSetVersion = valueSetVersion;
       this.valueOverride = valueOverride;
       this.status = status;
       this.statusDate = statusDate;
       this.isStructureEntry = isStructureEntry;
       this.orderNr = orderNr;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="codeSystemEntityVersionId", column=@Column(name="codeSystemEntityVersionId", nullable=false) ), 
        @AttributeOverride(name="valuesetVersionId", column=@Column(name="valuesetVersionId", nullable=false) ) } )
    public ConceptValueSetMembershipId getId() {
        return this.id;
    }
    
    public void setId(ConceptValueSetMembershipId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityVersionId", nullable=false, insertable=false, updatable=false)
    public CodeSystemEntityVersion getCodeSystemEntityVersion() {
        return this.codeSystemEntityVersion;
    }
    
    public void setCodeSystemEntityVersion(CodeSystemEntityVersion codeSystemEntityVersion) {
        this.codeSystemEntityVersion = codeSystemEntityVersion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="valuesetVersionId", nullable=false, insertable=false, updatable=false)
    public ValueSetVersion getValueSetVersion() {
        return this.valueSetVersion;
    }
    
    public void setValueSetVersion(ValueSetVersion valueSetVersion) {
        this.valueSetVersion = valueSetVersion;
    }
    
    @Column(name="valueOverride", length=100)
    public String getValueOverride() {
        return this.valueOverride;
    }
    
    public void setValueOverride(String valueOverride) {
        this.valueOverride = valueOverride;
    }

    @Column(name="status", nullable=false)
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="statusDate", nullable=false, length=19)
    public Date getStatusDate() {
        return this.statusDate;
    }
    
    public void setStatusDate(Date statusDate) {
        this.statusDate = statusDate;
    }
    @Column(name="isStructureEntry")
    public Boolean getIsStructureEntry() {
        return isStructureEntry;
    }

    public void setIsStructureEntry(Boolean isStructureEntry) {
        this.isStructureEntry = isStructureEntry;
    }
    @Column(name="orderNr")
    public Long getOrderNr() {
        return orderNr;
    }

    public void setOrderNr(Long orderNr) {
        this.orderNr = orderNr;
    }
    
    @Column(name = "description", length = 65535)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "meaning", length = 65535)
    public String getMeaning() {
        return meaning;
    }

    public void setMeaning(String meaning) {
        this.meaning = meaning;
    }

    @Column(name = "hints", length = 65535)
    public String getHints() {
        return hints;
    }

    public void setHints(String hints) {
        this.hints = hints;
    }
}


