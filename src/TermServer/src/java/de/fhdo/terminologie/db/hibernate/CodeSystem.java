/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CodeSystem generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlRootElement
@XmlType(namespace = "de.fhdo.termserver.types")
@Entity
@Table(name = "code_system")
public class CodeSystem implements java.io.Serializable
{

  private Long id;
  private Long currentVersionId;
  private String name;
  private String description;
  private String descriptionEng;
  private Date insertTimestamp;
  private String codeSystemType;
  private String website;
  private Set<CodeSystemVersion> codeSystemVersions = new HashSet<CodeSystemVersion>(0);
  private Set<DomainValue> domainValues = new HashSet<DomainValue>(0);
  private Set<MetadataParameter> metadataParameters = new HashSet<MetadataParameter>(0);

  public CodeSystem()
  {
  }

  public CodeSystem(String name, Date insertTimestamp)
  {
    this.name = name;
    this.insertTimestamp = insertTimestamp;
  }

  public CodeSystem(Long currentVersionId, String name, String description, Date insertTimestamp, String descriptionEng, String codeSystemType, String website, Set<CodeSystemVersion> codeSystemVersions, Set<DomainValue> domainValues)
  {
    this.currentVersionId = currentVersionId;
    this.name = name;
    this.description = description;
    this.descriptionEng = descriptionEng;
    this.insertTimestamp = insertTimestamp;
    this.codeSystemType = codeSystemType;
    this.website = website;
    this.codeSystemVersions = codeSystemVersions;
    this.domainValues = domainValues;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)
  @Column(name = "id", unique = true, nullable = false)
  public Long getId()
  {
    return this.id;
  }

  public void setId(Long id)
  {
    this.id = id;
  }

  @Column(name = "currentVersionId")
  public Long getCurrentVersionId()
  {
    return this.currentVersionId;
  }

  public void setCurrentVersionId(Long currentVersionId)
  {
    this.currentVersionId = currentVersionId;
  }

  @Column(name = "name", nullable = false, length = 100)
  public String getName()
  {
    return this.name;
  }

  public void setName(String name)
  {
    this.name = name;
  }

  @Column(name = "description", length = 65535)
  public String getDescription()
  {
    return this.description;
  }

  public void setDescription(String description)
  {
    this.description = description;
  }
  
  @Column(name = "descriptionEng", length = 65535)
  public String getDescriptionEng()
  {
    return this.descriptionEng;
  }

  public void setDescriptionEng(String descriptionEng)
  {
    this.descriptionEng = descriptionEng;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "insertTimestamp", nullable = false, length = 19)
  public Date getInsertTimestamp()
  {
    return this.insertTimestamp;
  }

  public void setInsertTimestamp(Date insertTimestamp)
  {
    this.insertTimestamp = insertTimestamp;
  }
  
  @Column(name = "codeSystemType", length = 30)
  public String getCodeSystemType()
  {
    return this.codeSystemType;
  }

  public void setCodeSystemType(String codeSystemType)
  {
    this.codeSystemType = codeSystemType;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystem")
  public Set<CodeSystemVersion> getCodeSystemVersions()
  {
    return this.codeSystemVersions;
  }

  public void setCodeSystemVersions(Set<CodeSystemVersion> codeSystemVersions)
  {
    this.codeSystemVersions = codeSystemVersions;
  }

  
  @Column(name = "website", length = 65535)
  public String getWebsite() {
      return website;
  }

  public void setWebsite(String website) {
      this.website = website;
  }

  @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
  @JoinTable(name = "domain_value_has_code_system", joinColumns =
  {
    @JoinColumn(name = "code_system_id", nullable = false, updatable = false)
  }, inverseJoinColumns =
  {
    @JoinColumn(name = "domain_value_domainValueId", nullable = false, updatable = false)
  })
  public Set<DomainValue> getDomainValues()
  {
    return this.domainValues;
  }

  public void setDomainValues(Set<DomainValue> domainValues)
  {
    this.domainValues = domainValues;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystem")
  public Set<MetadataParameter> getMetadataParameters()
  {
    return this.metadataParameters;
  }

  public void setMetadataParameters(Set<MetadataParameter> metadataParameters)
  {
    this.metadataParameters = metadataParameters;
  }
  
  @Override
    public String toString(){
        String s = super.toString();

        return "CS: " + name + "("+s+")";
    }
}
