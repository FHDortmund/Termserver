/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CodeSystemEntityVersion generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlRootElement
@XmlType(namespace = "de.fhdo.termserver.types")
@Entity
@Table(name = "code_system_entity_version"
)
public class CodeSystemEntityVersion implements java.io.Serializable
{

  private Long versionId;
  private CodeSystemEntity codeSystemEntity;
  private Long previousVersionId;
  private Integer statusVisibility;
  private Date statusVisibilityDate;
  private Integer statusDeactivated;
  private Date statusDeactivatedDate;
  private Integer statusWorkflow;
  private Date statusWorkflowDate;
  private Date effectiveDate;
  private Integer majorRevision;
  private Integer minorRevision;
  private Date insertTimestamp;
  private Boolean isLeaf;
  private Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1 = new HashSet<CodeSystemEntityVersionAssociation>(0);
  private Set<CodeSystemConcept> codeSystemConcepts = new HashSet<CodeSystemConcept>(0);
  private Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2 = new HashSet<CodeSystemEntityVersionAssociation>(0);
  private Set<AssociationType> associationTypes = new HashSet<AssociationType>(0);
  private Set<ConceptValueSetMembership> conceptValueSetMemberships = new HashSet<ConceptValueSetMembership>(0);
  private Set<CodeSystemMetadataValue> codeSystemMetadataValues = new HashSet<CodeSystemMetadataValue>(0);
  private Set<ValueSetMetadataValue> valueSetMetadataValues = new HashSet<ValueSetMetadataValue>(0);

  public CodeSystemEntityVersion()
  {
  }

  public CodeSystemEntityVersion(CodeSystemEntity codeSystemEntity, Integer status, Date statusDate, Date insertTimestamp)
  {
    this.codeSystemEntity = codeSystemEntity;
    this.statusVisibility = status;
    this.statusVisibilityDate = statusDate;
    this.insertTimestamp = insertTimestamp;
  }

  public CodeSystemEntityVersion(CodeSystemEntity codeSystemEntity, Long previousVersionId, Integer status, Date statusDate, Date effectiveDate, Integer majorRevision, Integer minorRevision, Date insertTimestamp, Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1, Set<CodeSystemConcept> codeSystemConcepts, Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2, Set<AssociationType> associationTypes, Set<ConceptValueSetMembership> conceptValueSetMemberships, Set<CodeSystemMetadataValue> codeSystemMetadataValues)
  {
    this.codeSystemEntity = codeSystemEntity;
    this.previousVersionId = previousVersionId;
    this.statusVisibility = status;
    this.statusVisibilityDate = statusDate;
    this.effectiveDate = effectiveDate;
    this.majorRevision = majorRevision;
    this.minorRevision = minorRevision;
    this.insertTimestamp = insertTimestamp;
    this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1 = codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1;
    this.codeSystemConcepts = codeSystemConcepts;
    this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2 = codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2;
    this.associationTypes = associationTypes;
    this.conceptValueSetMemberships = conceptValueSetMemberships;
    this.codeSystemMetadataValues = codeSystemMetadataValues;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)

  @Column(name = "versionId", unique = true, nullable = false)
  public Long getVersionId()
  {
    return this.versionId;
  }

  public void setVersionId(Long versionId)
  {
    this.versionId = versionId;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "codeSystemEntityId", nullable = false)
  public CodeSystemEntity getCodeSystemEntity()
  {
    return this.codeSystemEntity;
  }

  public void setCodeSystemEntity(CodeSystemEntity codeSystemEntity)
  {
    this.codeSystemEntity = codeSystemEntity;
  }

  @Column(name = "isLeaf")
  public Boolean getIsLeaf()
  {
    return this.isLeaf;
  }

  public void setIsLeaf(Boolean isLeaf)
  {
    this.isLeaf = isLeaf;
  }

  @Column(name = "previousVersionId")
  public Long getPreviousVersionId()
  {
    return this.previousVersionId;
  }

  public void setPreviousVersionId(Long previousVersionId)
  {
    this.previousVersionId = previousVersionId;
  }

  @Column(name = "statusVisibility", nullable = false)
  public Integer getStatusVisibility()
  {
    return this.statusVisibility;
  }

  public void setStatusVisibility(Integer status)
  {
    this.statusVisibility = status;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "statusVisibilityDate", nullable = false, length = 19)
  public Date getStatusVisibilityDate()
  {
    return this.statusVisibilityDate;
  }

  public void setStatusVisibilityDate(Date statusDate)
  {
    this.statusVisibilityDate = statusDate;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "effectiveDate", length = 19)
  public Date getEffectiveDate()
  {
    return this.effectiveDate;
  }

  public void setEffectiveDate(Date effectiveDate)
  {
    this.effectiveDate = effectiveDate;
  }

  @Column(name = "majorRevision")
  public Integer getMajorRevision()
  {
    return this.majorRevision;
  }

  public void setMajorRevision(Integer majorRevision)
  {
    this.majorRevision = majorRevision;
  }

  @Column(name = "minorRevision")
  public Integer getMinorRevision()
  {
    return this.minorRevision;
  }

  public void setMinorRevision(Integer minorRevision)
  {
    this.minorRevision = minorRevision;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "insertTimestamp", nullable = false, length = 19)
  public Date getInsertTimestamp()
  {
    return this.insertTimestamp;
  }

  public void setInsertTimestamp(Date insertTimestamp)
  {
    this.insertTimestamp = insertTimestamp;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersionByCodeSystemEntityVersionId1")
  public Set<CodeSystemEntityVersionAssociation> getCodeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1()
  {
    return this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1;
  }

  public void setCodeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1(Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1)
  {
    this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1 = codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId1;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersion")
  public Set<CodeSystemConcept> getCodeSystemConcepts()
  {
    return this.codeSystemConcepts;
  }

  public void setCodeSystemConcepts(Set<CodeSystemConcept> codeSystemConcepts)
  {
    this.codeSystemConcepts = codeSystemConcepts;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersionByCodeSystemEntityVersionId2")
  public Set<CodeSystemEntityVersionAssociation> getCodeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2()
  {
    return this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2;
  }

  public void setCodeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2(Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2)
  {
    this.codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2 = codeSystemEntityVersionAssociationsForCodeSystemEntityVersionId2;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersion")
  public Set<AssociationType> getAssociationTypes()
  {
    return this.associationTypes;
  }

  public void setAssociationTypes(Set<AssociationType> associationTypes)
  {
    this.associationTypes = associationTypes;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersion")
  public Set<ConceptValueSetMembership> getConceptValueSetMemberships()
  {
    return this.conceptValueSetMemberships;
  }

  public void setConceptValueSetMemberships(Set<ConceptValueSetMembership> conceptValueSetMemberships)
  {
    this.conceptValueSetMemberships = conceptValueSetMemberships;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersion")
  public Set<CodeSystemMetadataValue> getCodeSystemMetadataValues()
  {
    return this.codeSystemMetadataValues;
  }

  public void setCodeSystemMetadataValues(Set<CodeSystemMetadataValue> codeSystemMetadataValues)
  {
    this.codeSystemMetadataValues = codeSystemMetadataValues;
  }

  @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "codeSystemEntityVersion")
  public Set<ValueSetMetadataValue> getValueSetMetadataValues()
  {
    return this.valueSetMetadataValues;
  }

  public void setValueSetMetadataValues(Set<ValueSetMetadataValue> valueSetMetadataValues)
  {
    this.valueSetMetadataValues = valueSetMetadataValues;
  }

  
  @Column(name = "statusDeactivated", nullable = false)
  public Integer getStatusDeactivated()
  {
    return this.statusDeactivated;
  }

  public void setStatusDeactivated(Integer status)
  {
    this.statusDeactivated = status;
  }
  
  @Column(name = "statusWorkflow", nullable = false)
  public Integer getStatusWorkflow()
  {
    return this.statusWorkflow;
  }

  public void setStatusWorkflow(Integer status)
  {
    this.statusWorkflow = status;
  }
  
  
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "statusDeactivatedDate", nullable = false, length = 19)
  public Date getStatusDeactivatedDate()
  {
    return this.statusDeactivatedDate;
  }

  public void setStatusDeactivatedDate(Date statusDate)
  {
    this.statusDeactivatedDate = statusDate;
  }
  
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "statusWorkflowDate", nullable = false, length = 19)
  public Date getStatusWorkflowDate()
  {
    return this.statusWorkflowDate;
  }

  public void setStatusWorkflowDate(Date statusDate)
  {
    this.statusWorkflowDate = statusDate;
  }
}
