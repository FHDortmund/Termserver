/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CodeSystemConceptTranslation generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlRootElement
@XmlType(namespace = "de.fhdo.termserver.types")
@Entity
@Table(name = "code_system_concept_translation"
)
public class CodeSystemConceptTranslation implements java.io.Serializable
{

  private Long id;
  private CodeSystemConcept codeSystemConcept;
  private String term;
  private String termAbbrevation;
  private String languageCd;
  private String description;
  private String meaning;
  private String hints;

  public CodeSystemConceptTranslation()
  {
  }

  public CodeSystemConceptTranslation(CodeSystemConcept codeSystemConcept, String term, String languageCd)
  {
    this.codeSystemConcept = codeSystemConcept;
    this.term = term;
    this.languageCd = languageCd;
  }

  public CodeSystemConceptTranslation(CodeSystemConcept codeSystemConcept, String term, String termAbbrevation, String languageCd, String description)
  {
    this.codeSystemConcept = codeSystemConcept;
    this.term = term;
    this.termAbbrevation = termAbbrevation;
    this.languageCd = languageCd;
    this.description = description;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)

  @Column(name = "id", unique = true, nullable = false)
  public Long getId()
  {
    return this.id;
  }

  public void setId(Long id)
  {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "codeSystemEntityVersionId", nullable = false)
  public CodeSystemConcept getCodeSystemConcept()
  {
    return this.codeSystemConcept;
  }

  public void setCodeSystemConcept(CodeSystemConcept codeSystemConcept)
  {
    this.codeSystemConcept = codeSystemConcept;
  }

  @Column(name = "term", nullable = false, length = 65535)
  public String getTerm()
  {
    return this.term;
  }

  public void setTerm(String term)
  {
    this.term = term;
  }

  @Column(name = "termAbbrevation", length = 50)
  public String getTermAbbrevation()
  {
    return this.termAbbrevation;
  }

  public void setTermAbbrevation(String termAbbrevation)
  {
    this.termAbbrevation = termAbbrevation;
  }

  @Column(name = "languageCd", nullable = false)
  public String getLanguageCd()
  {
    return this.languageCd;
  }

  public void setLanguageCd(String languageCd)
  {
    this.languageCd = languageCd;
  }

  @Column(name = "description", length = 65535)
  public String getDescription()
  {
    return this.description;
  }

  public void setDescription(String description)
  {
    this.description = description;
  }
  
  @Column(name = "meaning", length = 65535)
  public String getMeaning()
  {
    return meaning;
  }

  public void setMeaning(String meaning)
  {
    this.meaning = meaning;
  }

  @Column(name = "hints", length = 65535)
  public String getHints()
  {
    return hints;
  }

  public void setHints(String hints)
  {
    this.hints = hints;
  }

}
