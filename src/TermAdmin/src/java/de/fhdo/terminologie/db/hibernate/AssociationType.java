/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * AssociationType generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Entity
@Table(name="association_type"
    
)
public class AssociationType  implements java.io.Serializable {


     private Long codeSystemEntityVersionId;
     private CodeSystemEntityVersion codeSystemEntityVersion;
     private String forwardName;
     private String reverseName;
     private Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociations = new HashSet<CodeSystemEntityVersionAssociation>(0);

    public AssociationType() {
    }

	
    public AssociationType(Long codeSystemEntityVersionId, CodeSystemEntityVersion codeSystemEntityVersion, String forwardName, String reverseName) {
        this.codeSystemEntityVersionId = codeSystemEntityVersionId;
        this.codeSystemEntityVersion = codeSystemEntityVersion;
        this.forwardName = forwardName;
        this.reverseName = reverseName;
    }
    public AssociationType(Long codeSystemEntityVersionId, CodeSystemEntityVersion codeSystemEntityVersion, String forwardName, String reverseName, Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociations) {
       this.codeSystemEntityVersionId = codeSystemEntityVersionId;
       this.codeSystemEntityVersion = codeSystemEntityVersion;
       this.forwardName = forwardName;
       this.reverseName = reverseName;
       this.codeSystemEntityVersionAssociations = codeSystemEntityVersionAssociations;
    }
   
     @Id 
    
    @Column(name="codeSystemEntityVersionId", unique=true, nullable=false)
    public Long getCodeSystemEntityVersionId() {
        return this.codeSystemEntityVersionId;
    }
    
    public void setCodeSystemEntityVersionId(Long codeSystemEntityVersionId) {
        this.codeSystemEntityVersionId = codeSystemEntityVersionId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityVersionId", unique=true, nullable=false, insertable=false, updatable=false)
    public CodeSystemEntityVersion getCodeSystemEntityVersion() {
        return this.codeSystemEntityVersion;
    }
    
    public void setCodeSystemEntityVersion(CodeSystemEntityVersion codeSystemEntityVersion) {
        this.codeSystemEntityVersion = codeSystemEntityVersion;
    }
    
    @Column(name="forwardName", nullable=false, length=50)
    public String getForwardName() {
        return this.forwardName;
    }
    
    public void setForwardName(String forwardName) {
        this.forwardName = forwardName;
    }
    
    @Column(name="reverseName", nullable=false, length=50)
    public String getReverseName() {
        return this.reverseName;
    }
    
    public void setReverseName(String reverseName) {
        this.reverseName = reverseName;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="associationType")
    public Set<CodeSystemEntityVersionAssociation> getCodeSystemEntityVersionAssociations() {
        return this.codeSystemEntityVersionAssociations;
    }
    
    public void setCodeSystemEntityVersionAssociations(Set<CodeSystemEntityVersionAssociation> codeSystemEntityVersionAssociations) {
        this.codeSystemEntityVersionAssociations = codeSystemEntityVersionAssociations;
    }




}


