/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LicencedUser generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Entity
@Table(name="licenced_user"
    
)
public class LicencedUser  implements java.io.Serializable {


     private LicencedUserId id;
     private LicenceType licenceType;
     private CodeSystemVersion codeSystemVersion;
     private TermUser termUser;
     private Date validFrom;
     private Date validTo;

    public LicencedUser() {
    }

	
    public LicencedUser(LicencedUserId id, CodeSystemVersion codeSystemVersion, TermUser termUser, Date validFrom, Date validTo) {
        this.id = id;
        this.codeSystemVersion = codeSystemVersion;
        this.termUser = termUser;
        this.validFrom = validFrom;
        this.validTo = validTo;
    }
    public LicencedUser(LicencedUserId id, LicenceType licenceType, CodeSystemVersion codeSystemVersion, TermUser termUser, Date validFrom, Date validTo) {
       this.id = id;
       this.licenceType = licenceType;
       this.codeSystemVersion = codeSystemVersion;
       this.termUser = termUser;
       this.validFrom = validFrom;
       this.validTo = validTo;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="userId", column=@Column(name="userId", nullable=false) ), 
        @AttributeOverride(name="codeSystemVersionId", column=@Column(name="codeSystemVersionId", nullable=false) ) } )
    public LicencedUserId getId() {
        return this.id;
    }
    
    public void setId(LicencedUserId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="licenceTypeId")
    public LicenceType getLicenceType() {
        return this.licenceType;
    }
    
    public void setLicenceType(LicenceType licenceType) {
        this.licenceType = licenceType;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemVersionId", nullable=false, insertable=false, updatable=false)
    public CodeSystemVersion getCodeSystemVersion() {
        return this.codeSystemVersion;
    }
    
    public void setCodeSystemVersion(CodeSystemVersion codeSystemVersion) {
        this.codeSystemVersion = codeSystemVersion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userId", nullable=false, insertable=false, updatable=false)
    public TermUser getTermUser() {
        return this.termUser;
    }
    
    public void setTermUser(TermUser termUser) {
        this.termUser = termUser;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="validFrom", nullable=false, length=19)
    public Date getValidFrom() {
        return this.validFrom;
    }
    
    public void setValidFrom(Date validFrom) {
        this.validFrom = validFrom;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="validTo", nullable=false, length=19)
    public Date getValidTo() {
        return this.validTo;
    }
    
    public void setValidTo(Date validTo) {
        this.validTo = validTo;
    }




}


