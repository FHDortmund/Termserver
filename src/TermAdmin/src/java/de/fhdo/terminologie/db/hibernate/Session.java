/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Session generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.types")
@Entity
@Table(name="session"
    
)
public class Session  implements java.io.Serializable {


     private Long id;
     private TermUser termUser;
     private Date lastTimestamp;
     private String sessionId;
     private String ipAddress;
     //private String collabUsername;

    public Session() {
    }

	
    public Session(TermUser termUser, Date lastTimestamp, String sessionId) {
        this.termUser = termUser;
        this.lastTimestamp = lastTimestamp;
        this.sessionId = sessionId;
        
    }
    public Session(TermUser termUser, Date lastTimestamp, String sessionId, String ipAddress) {
       this.termUser = termUser;
       this.lastTimestamp = lastTimestamp;
       this.sessionId = sessionId;
       this.ipAddress = ipAddress;
       
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="termUserId", nullable=false)
    public TermUser getTermUser() {
        return this.termUser;
    }
    
    public void setTermUser(TermUser termUser) {
        this.termUser = termUser;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastTimestamp", nullable=false, length=19)
    public Date getLastTimestamp() {
        return this.lastTimestamp;
    }
    
    public void setLastTimestamp(Date lastTimestamp) {
        this.lastTimestamp = lastTimestamp;
    }
    
    @Column(name="sessionId", nullable=false, length=65535)
    public String getSessionId() {
        return this.sessionId;
    }
    
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }
    
    @Column(name="ipAddress", length=45)
    public String getIpAddress() {
        return this.ipAddress;
    }
    
    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }

    /*@Column(name="collabUsername", length=65535)
    
    public String getCollabUsername() {
        return this.collabUsername;
    }
    
    public void setCollabUsername(String collabUsername) {
        this.collabUsername = collabUsername;
    }*/
}


