package de.fhdo.collaboration.db.classes;
// Generated 30.06.2015 09:32:45 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name="role"
    
)
public class Role  implements java.io.Serializable {


     private Long id;
     private Boolean adminFlag;
     private String name;
     private Boolean mayChangeStatus;
     private Boolean mayAdminProposal;
     private Set<Collaborationuser> collaborationusers = new HashSet<Collaborationuser>(0);
     private Set<Userprivilege> userprivileges = new HashSet<Userprivilege>(0);
     private Set<Statusrel> statusrels = new HashSet<Statusrel>(0);
     private Set<Status> statuses = new HashSet<Status>(0);

    public Role() {
    }

	
    public Role(String name) {
        this.name = name;
    }
    public Role(Boolean adminFlag, String name, Boolean mayChangeStatus, Boolean mayAdminProposal, Set<Collaborationuser> collaborationusers, Set<Userprivilege> userprivileges, Set<Statusrel> statusrels, Set<Status> statuses) {
       this.adminFlag = adminFlag;
       this.name = name;
       this.mayChangeStatus = mayChangeStatus;
       this.mayAdminProposal = mayAdminProposal;
       this.collaborationusers = collaborationusers;
       this.userprivileges = userprivileges;
       this.statusrels = statusrels;
       this.statuses = statuses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    
    @Column(name="adminFlag")
    public Boolean getAdminFlag() {
        return this.adminFlag;
    }
    
    public void setAdminFlag(Boolean adminFlag) {
        this.adminFlag = adminFlag;
    }

    
    @Column(name="name", nullable=false, length=65535)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="mayChangeStatus")
    public Boolean getMayChangeStatus() {
        return this.mayChangeStatus;
    }
    
    public void setMayChangeStatus(Boolean mayChangeStatus) {
        this.mayChangeStatus = mayChangeStatus;
    }

    
    @Column(name="mayAdminProposal")
    public Boolean getMayAdminProposal() {
        return this.mayAdminProposal;
    }
    
    public void setMayAdminProposal(Boolean mayAdminProposal) {
        this.mayAdminProposal = mayAdminProposal;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="role2collaborationuser", joinColumns = { 
        @JoinColumn(name="roleId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="collaborationUserId", nullable=false, updatable=false) })
    public Set<Collaborationuser> getCollaborationusers() {
        return this.collaborationusers;
    }
    
    public void setCollaborationusers(Set<Collaborationuser> collaborationusers) {
        this.collaborationusers = collaborationusers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="role")
    public Set<Userprivilege> getUserprivileges() {
        return this.userprivileges;
    }
    
    public void setUserprivileges(Set<Userprivilege> userprivileges) {
        this.userprivileges = userprivileges;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="role2action", joinColumns = { 
        @JoinColumn(name="roleId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="statusRelId", nullable=false, updatable=false) })
    public Set<Statusrel> getStatusrels() {
        return this.statusrels;
    }
    
    public void setStatusrels(Set<Statusrel> statusrels) {
        this.statusrels = statusrels;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="role2status", joinColumns = { 
        @JoinColumn(name="roleId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="statusId", nullable=false, updatable=false) })
    public Set<Status> getStatuses() {
        return this.statuses;
    }
    
    public void setStatuses(Set<Status> statuses) {
        this.statuses = statuses;
    }




}


