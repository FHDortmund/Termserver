/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2014 FH Dortmund: Peter Haas, Robert Muetzner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.fhdo.collaboration.db.classes;
// Generated 15.05.2013 18:02:38 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Proposal generated by hbm2java
 */
@Entity
@Table(name="proposal"
    
)
public class Proposal  implements java.io.Serializable {


     private Long id;
     private Collaborationuser collaborationuser;
     private String description;
     private Integer status;
     private Date created;
     private Date validFrom;
     private Date validTo;
     private Date statusDate;
     private Date lastChangeDate;
     private String note;
     private String contentType;
     private Long objectId;
     private Long objectVersionId;
     private String objectName;
     private String objectVersionName;
     private Set<Privilege> privileges = new HashSet<Privilege>(0);
     private Set<Rating> ratings = new HashSet<Rating>(0);
     private Set<Proposalobject> proposalobjects = new HashSet<Proposalobject>(0);
     private Set<Discussion> discussions = new HashSet<Discussion>(0);
     private Set<Link> links = new HashSet<Link>(0);
     private Set<Proposalstatuschange> proposalstatuschanges = new HashSet<Proposalstatuschange>(0);

    public Proposal() {
    }

	
    public Proposal(Collaborationuser collaborationuser, Date created) {
        this.collaborationuser = collaborationuser;
        this.created = created;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="collaborationUserId", nullable=false)
    public Collaborationuser getCollaborationuser() {
        return this.collaborationuser;
    }
    
    public void setCollaborationuser(Collaborationuser collaborationuser) {
        this.collaborationuser = collaborationuser;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=19)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="validFrom", length=19)
    public Date getValidFrom() {
        return this.validFrom;
    }
    
    public void setValidFrom(Date validFrom) {
        this.validFrom = validFrom;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="validTo", length=19)
    public Date getValidTo() {
        return this.validTo;
    }
    
    public void setValidTo(Date validTo) {
        this.validTo = validTo;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="statusDate", length=19)
    public Date getStatusDate() {
        return this.statusDate;
    }
    
    public void setStatusDate(Date statusDate) {
        this.statusDate = statusDate;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastChangeDate", length=19)
    public Date getLastChangeDate() {
        return this.lastChangeDate;
    }
    
    public void setLastChangeDate(Date lastChangeDate) {
        this.lastChangeDate = lastChangeDate;
    }
    
    @Column(name="note", length=65535)
    public String getNote() {
        return this.note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }
    
    @Column(name="contentType", length=30)
    public String getContentType() {
        return this.contentType;
    }
    
    public void setContentType(String contentType) {
        this.contentType = contentType;
    }
    
    @Column(name="objectId")
    public Long getObjectId() {
        return this.objectId;
    }
    
    public void setObjectId(Long objectId) {
        this.objectId = objectId;
    }
    
    @Column(name="objectVersionId")
    public Long getObjectVersionId() {
        return this.objectVersionId;
    }
    
    public void setObjectVersionId(Long objectVersionId) {
        this.objectVersionId = objectVersionId;
    }
    
    @Column(name="objectName", length=255)
    public String getObjectName() {
        return this.objectName;
    }
    
    public void setObjectName(String objectName) {
        this.objectName = objectName;
    }
    
    @Column(name="objectVersionName", length=255)
    public String getObjectVersionName() {
        return this.objectVersionName;
    }
    
    public void setObjectVersionName(String objectVersionName) {
        this.objectVersionName = objectVersionName;
    }
    
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Privilege> getPrivileges() {
        return this.privileges;
    }
    
    public void setPrivileges(Set<Privilege> privileges) {
        this.privileges = privileges;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Rating> getRatings() {
        return this.ratings;
    }
    
    public void setRatings(Set<Rating> ratings) {
        this.ratings = ratings;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Proposalobject> getProposalobjects() {
        return this.proposalobjects;
    }
    
    public void setProposalobjects(Set<Proposalobject> proposalobjects) {
        this.proposalobjects = proposalobjects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Discussion> getDiscussions() {
        return this.discussions;
    }
    
    public void setDiscussions(Set<Discussion> discussions) {
        this.discussions = discussions;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Link> getLinks() {
        return this.links;
    }
    
    public void setLinks(Set<Link> links) {
        this.links = links;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="proposal")
    public Set<Proposalstatuschange> getProposalstatuschanges() {
        return this.proposalstatuschanges;
    }
    
    public void setProposalstatuschanges(Set<Proposalstatuschange> proposalstatuschanges) {
        this.proposalstatuschanges = proposalstatuschanges;
    }




}


