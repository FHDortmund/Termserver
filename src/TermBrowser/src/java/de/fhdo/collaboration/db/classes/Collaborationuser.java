package de.fhdo.collaboration.db.classes;
// Generated 30.06.2015 09:32:45 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Collaborationuser generated by hbm2java
 */
@Entity
@Table(name = "collaborationuser"
)
public class Collaborationuser implements java.io.Serializable
{

  private Long id;
  private Organisation organisation;
  private String username;
  private String password;
  private String salt;
  private String name;
  private String firstName;
  private String city;
  private String country;
  private String email;
  private String note;
  private String phone;
  private String street;
  private String title;
  private String zip;
  private boolean sendMail;
  private Boolean activated;
  private String activationMd5;
  private Boolean enabled;
  private Boolean hidden;
  private Date activationTime;
  private Boolean deleted;
  private Set<Link> links = new HashSet<Link>(0);
  private Set<Userprivilege> userprivileges = new HashSet<Userprivilege>(0);
  private Set<Proposal> proposals = new HashSet<Proposal>(0);
  private Set<Rating> ratings = new HashSet<Rating>(0);
  private Set<Proposalstatuschange> proposalstatuschanges = new HashSet<Proposalstatuschange>(0);
  private Set<Discussion> discussions = new HashSet<Discussion>(0);
  private Set<Role> roles = new HashSet<Role>(0);

  public Collaborationuser()
  {
  }

  public Collaborationuser(String username, String password, boolean sendMail)
  {
    this.username = username;
    this.password = password;
    this.sendMail = sendMail;
  }

  public Collaborationuser(Organisation organisation, String username, String password, String salt, String name, String firstName, String city, String country, String email, String note, String phone, String street, String title, String zip, boolean sendMail, Boolean activated, String activationMd5, Boolean enabled, Boolean hidden, Date activationTime, Boolean deleted, Set<Link> links, Set<Userprivilege> userprivileges, Set<Proposal> proposals, Set<Rating> ratings, Set<Proposalstatuschange> proposalstatuschanges, Set<Discussion> discussions, Set<Role> roles)
  {
    this.organisation = organisation;
    this.username = username;
    this.password = password;
    this.salt = salt;
    this.name = name;
    this.firstName = firstName;
    this.city = city;
    this.country = country;
    this.email = email;
    this.note = note;
    this.phone = phone;
    this.street = street;
    this.title = title;
    this.zip = zip;
    this.sendMail = sendMail;
    this.activated = activated;
    this.activationMd5 = activationMd5;
    this.enabled = enabled;
    this.hidden = hidden;
    this.activationTime = activationTime;
    this.deleted = deleted;
    this.links = links;
    this.userprivileges = userprivileges;
    this.proposals = proposals;
    this.ratings = ratings;
    this.proposalstatuschanges = proposalstatuschanges;
    this.discussions = discussions;
    this.roles = roles;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)

  @Column(name = "id", unique = true, nullable = false)
  public Long getId()
  {
    return this.id;
  }

  public void setId(Long id)
  {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "organisation_ID")
  public Organisation getOrganisation()
  {
    return this.organisation;
  }

  public void setOrganisation(Organisation organisation)
  {
    this.organisation = organisation;
  }

  @Column(name = "username", nullable = false, length = 64)
  public String getUsername()
  {
    return this.username;
  }

  public void setUsername(String username)
  {
    this.username = username;
  }

  @Column(name = "password", nullable = false, length = 65535)
  public String getPassword()
  {
    return this.password;
  }

  public void setPassword(String password)
  {
    this.password = password;
  }

  @Column(name = "salt", length = 128)
  public String getSalt()
  {
    return this.salt;
  }

  public void setSalt(String salt)
  {
    this.salt = salt;
  }

  @Column(name = "name", length = 65535)
  public String getName()
  {
    return this.name;
  }

  public void setName(String name)
  {
    this.name = name;
  }

  @Column(name = "firstName", length = 65535)
  public String getFirstName()
  {
    return this.firstName;
  }

  public void setFirstName(String firstName)
  {
    this.firstName = firstName;
  }

  @Column(name = "city", length = 90)
  public String getCity()
  {
    return this.city;
  }

  public void setCity(String city)
  {
    this.city = city;
  }

  @Column(name = "country", length = 30)
  public String getCountry()
  {
    return this.country;
  }

  public void setCountry(String country)
  {
    this.country = country;
  }

  @Column(name = "email", length = 65535)
  public String getEmail()
  {
    return this.email;
  }

  public void setEmail(String email)
  {
    this.email = email;
  }

  @Column(name = "note", length = 65535)
  public String getNote()
  {
    return this.note;
  }

  public void setNote(String note)
  {
    this.note = note;
  }

  @Column(name = "phone", length = 128)
  public String getPhone()
  {
    return this.phone;
  }

  public void setPhone(String phone)
  {
    this.phone = phone;
  }

  @Column(name = "street", length = 128)
  public String getStreet()
  {
    return this.street;
  }

  public void setStreet(String street)
  {
    this.street = street;
  }

  @Column(name = "title", length = 32)
  public String getTitle()
  {
    return this.title;
  }

  public void setTitle(String title)
  {
    this.title = title;
  }

  @Column(name = "zip", length = 16)
  public String getZip()
  {
    return this.zip;
  }

  public void setZip(String zip)
  {
    this.zip = zip;
  }

  @Column(name = "sendMail", nullable = false)
  public boolean isSendMail()
  {
    return this.sendMail;
  }

  public void setSendMail(boolean sendMail)
  {
    this.sendMail = sendMail;
  }

  @Column(name = "activated")
  public Boolean getActivated()
  {
    return this.activated;
  }

  public void setActivated(Boolean activated)
  {
    this.activated = activated;
  }

  @Column(name = "activation_md5", length = 80)
  public String getActivationMd5()
  {
    return this.activationMd5;
  }

  public void setActivationMd5(String activationMd5)
  {
    this.activationMd5 = activationMd5;
  }

  @Column(name = "enabled")
  public Boolean getEnabled()
  {
    return this.enabled;
  }

  public void setEnabled(Boolean enabled)
  {
    this.enabled = enabled;
  }

  @Column(name = "hidden")
  public Boolean getHidden()
  {
    return this.hidden;
  }

  public void setHidden(Boolean hidden)
  {
    this.hidden = hidden;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "activation_time", length = 19)
  public Date getActivationTime()
  {
    return this.activationTime;
  }

  public void setActivationTime(Date activationTime)
  {
    this.activationTime = activationTime;
  }

  @Column(name = "deleted")
  public Boolean getDeleted()
  {
    return this.deleted;
  }

  public void setDeleted(Boolean deleted)
  {
    this.deleted = deleted;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Link> getLinks()
  {
    return this.links;
  }

  public void setLinks(Set<Link> links)
  {
    this.links = links;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Userprivilege> getUserprivileges()
  {
    return this.userprivileges;
  }

  public void setUserprivileges(Set<Userprivilege> userprivileges)
  {
    this.userprivileges = userprivileges;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Proposal> getProposals()
  {
    return this.proposals;
  }

  public void setProposals(Set<Proposal> proposals)
  {
    this.proposals = proposals;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Rating> getRatings()
  {
    return this.ratings;
  }

  public void setRatings(Set<Rating> ratings)
  {
    this.ratings = ratings;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Proposalstatuschange> getProposalstatuschanges()
  {
    return this.proposalstatuschanges;
  }

  public void setProposalstatuschanges(Set<Proposalstatuschange> proposalstatuschanges)
  {
    this.proposalstatuschanges = proposalstatuschanges;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "collaborationuser")
  public Set<Discussion> getDiscussions()
  {
    return this.discussions;
  }

  public void setDiscussions(Set<Discussion> discussions)
  {
    this.discussions = discussions;
  }

  @ManyToMany(fetch = FetchType.LAZY)
  @JoinTable(name = "role2collaborationuser", catalog = "collab", joinColumns =
         {
           @JoinColumn(name = "collaborationUserId", nullable = false, updatable = false)
  }, inverseJoinColumns =
         {
           @JoinColumn(name = "roleId", nullable = false, updatable = false)
  })
  public Set<Role> getRoles()
  {
    return this.roles;
  }

  public void setRoles(Set<Role> roles)
  {
    this.roles = roles;
  }
  
  @Transient
  public String getFullName()
  {
    String s = title;
    if(s == null)
      s = "";
    
    if(firstName != null && firstName.length() > 0)
    {
      if(s.length() > 0)
        s += " ";
      s += firstName;
    }
    
    if(name != null && name.length() > 0)
    {
      if(s.length() > 0)
        s += " ";
      s += name;
    }
    
    return s;
  }

}
